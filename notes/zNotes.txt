zNotes



cd ~/AppData/Roaming/Adventure\ Land/autosync4984500319158272/adventureland
yarn add --dev jest

parapohrase an error:
Steam Ticket Failed: Error on getting encrypted app ticket.


Screeps People: Rising

https://screeps.com/a/#!/rank/world/2017-09?page=21&highlight=206
https://screeps.com/a/#!/profile/Rising


TODO: Investigate GAME APIs 
- http://adventure.land/docs/code/functions/command_character
- http://adventure.land/docs/code/functions/get_active_characters

****
send_item("Terranger",0,10000);
send_item("Terazarrior",0,10000);
send_item("NoHeals4U",0,10000);
send_item("Terakazam",0,10000);
send_item("Terrogue",0,10000);;

***
==
LOOT ALL CHESTS 

let i = 0;
let limit = 25; // max at once (avoid 200 per second code cost)
for (const [key, value] of Object.entries(parent.chests)) {
  loot(key);
    i++;
    if (i>limit) break;
}


==
Promise example:
const promise1 = new Promise((resolve, reject) => {
  setTimeout(() => {
    //resolve('foo');
    reject('bar');
  }, 300);
});

promise1
  .then((value) => { console.log(value); })
  .catch((value) => { console.log(value); });


console.log(promise1);
// expected output: [object Promise]



===

have multiple warriors stun them and only attack them while stunned using jacko when stun runs out
you can solo any monster that is not immune to stun that way regardless of stats
==
  socket.on('start',function(data){
        // alert(JSON.stringify(data));
        if(!no_html)
        {
            $("#progressui").remove();
            $("#content").html("");
            $("#topmid,#bottommid,#toprightcorner,#bottomleftcorner2,#bottomleftcorner").show();
            $(".xpsui").css("display","block");
            $(".tutorialui").css("display","block");
            $("body").append('<input id="chatinput" onkeypress="if(event.keyCode==13) say($(this).rfval()); send_typing();" type="text" autocomplete="off" name="alchatinput" placeholder=""/>');
        }

    UI menu controls 
         // locate menu
          const topRightCorner = parent.document.getElementById("toprightcorner");
          if (!topRightCorner) {
            game_log("Cannot find top right corner menu");
            return;
          }

          // Find code button
          const gameButtons = topRightCorner.getElementsByClassName("gamebutton");
          let codeButton;

          for (const gameButton of gameButtons) {
            if (gameButton.innerText === "CODE") {
              codeButton = gameButton;
              break;
            }
          }

          // Create new button
          const aiButton = parent.document.createElement("div");
          aiButton.className = "gamebutton";
          aiButton.appendChild(parent.document.createTextNode("AI \uD83E\uDD16"));
          aiButton.id = "aiuibutton";
          aiButton.setAttribute("onclick", "");

          // Add button
          topRightCorner.insertBefore(aiButton, codeButton);
          topRightCorner.insertBefore(
            parent.document.createTextNode("\n\t\t\t"),
            codeButton
          );

          // Create event
          aiButton.onclick = showAiDialog;
        that onclick attribute that is added is just for css rule :p
        function showAiDialog() {
          parent.show_modal(
            `<div id="modal-ai-settings"><h1>Ai settings<h1>${getAiDialogContent()}</div>`
          );
        }
        forget that manual code editing to update the bot :smile:
        checkbox:
                optionsContent += `
                    <li>
                        <label>
                            <input type="checkbox"${
                              settings[settingType] && " checked"
                            } onchange="code_eval(\`set('${settingType}', \${this.checked})\`)" />
                            ${settingType}
                        </label>
                    </li>
                    `;



==

Ok, i really should have looked in the character reference at some point. I just found out about character.xrange, .esize, .targets(which i always calculated myself) and character.cc, which i think are all useful to know about
===
SpadarFaar — 09/06/2020
If you want rare/valuable equipment, you need to go ranger mage unless you want fiery stuff
[1:47 PM]
Then just mage
[1:48 PM]
If you want gold you have a pretty limited set of monsters to choose from and they're pretty generic except for ents where you need to tank
[1:48 PM]
We don't really have any sources of equipment that can utilize diverse parties
[1:50 PM]
Armor/weapon boxes - cgoos

Book of secrets/agile quiver/fury - rats

Sucker punches - tiny crabs

==

How can we get access to the parent object of the methods in runner_functions.js? 
I want to wrap some of those methods with cache helpers, to do things like cache the bank in localstorage.  These methods aren't stored on window or some places under it that I manually explored.

parent.$("#maincode")[0].contentWindow

==
monster targeting 

function get_weight(current_entity,priority_list,reference){
  let index = priority_list ? Math.max(priority_list.indexOf(current_entity.mtype),0) : 10
  let weight = distance(reference,current_entity)/100
  + Math.min(current_entity.hp/current_entity.max_hp, 0.9)
  + index*100
  return weight
}

==
Cute bee info
{
    "x": -34.826582662967894,
    "y": 167.05867344198663,
    "width": 26,
    "height": 34,
    "alpha": 1,
    "visible": true,
    "cskin": "13",
    "i": 1,
    "j": 3,
    "skin": "cutebee",
    "stype": "full",
    "updates": 638,
    "type": "monster",
    "mtype": "cutebee",
    "in": "main",
    "map": "main",
    "hp": 300,
    "max_hp": 300,
    "mp": 2,
    "max_mp": 15,
    "speed": 12,
    "xp": 400,
    "attack": 16,
    "frequency": 0.5,
    "rage": 0.1,
    "aggro": 1,
    "damage_type": "physical",
    "respawn": -1,
    "range": 20,
    "name": "Cute Bee",
    "armor": 0,
    "resistance": 0,
    "id": "41472980",
    "move_num": 89285877,
    "cid": 1,
    "s": {},
    "last_ms": "2021-09-27T20:59:16.841Z",
    "walking": 31,
    "fx": {},
    "emblems": {},
    "c": {},
    "real_alpha": 1,
    "real_x": -34.826582662967894,
    "real_y": 167.05867344198663,
    "vx": 0,
    "vy": -11.999999984399999,
    "level": 1,
    "base": {
        "h": 12,
        "v": 8.5,
        "vn": 2
    },
    "drawn": true,
    "resync": false,
    "engaged_move": 89285877,
    "moving": true,
    "abs": false,
    "from_x": -34.826582662967894,
    "from_y": 226.91467336417554,
    "going_x": -34.826582662967894,
    "going_y": 26.914673364175542,
    "ref_speed": 12,
    "angle": -90,
    "hp_width": 28,
    "hp_color": 11609895,
    "ms_walk": "2021-09-27T20:59:16.525Z",
    "a_direction": 3,
    "direction": 3
}

==
https://discord.com/channels/238332476743745536/238366540091621377/838500502043492414

logger in use
        let log_message = new GoldLootedLog(character.name, Math.round(Date.now() * 1000000), data.gold)
        logger(log_message)


logging class

export class GoldLootedLog extends CharacterLogMessage {
    public type_name: string = 'gold_looted'
    public amount: number
    constructor(character_name: string, timestamp: number, amount: number) {
        super(character_name, timestamp)
        this.amount = amount
    }

    to_influx_protocol(): string {
        return `${this.type_name},character="${this.character_name}" amount=${this.amount} ${this.timestamp}`
    }
}
class CharacterLogMessage {
    public character_name: string
    public timestamp: number // Date.now() * 1000000

    constructor(character_name: string, timestamp: number) {
        this.character_name = character_name
        this.timestamp = timestamp
    }

    to_influx_protocol(): string {
        return ``
    }
}


== For banking library

/* Bank Slot Guide
A1:Jane      | items6
A2:Christie  | items4
A3:Christina | items5
A4:Janet     | items7
B1:Ledia     | items2
B2:Gabrielle | items0
B3:Gabriella | items1
B4:Lidia     | items3
*/



6  |  4  |  5  |  7
---------------
2  |  0  |  1  |  3


so like since the physical bank tabs look like this

0 1 2 3
4 5 6 7

and you first start with 5 & 6 already open, 
but say you purchase #4, then that would become items3 i believe

so instead of it being 

items0, items1, items2, items3
items4, items5, items6, items7

it would actually be depending on the order you buy something like this

items7, items6, items5, items2
items3, items0, items1, items4


==
Future Crypt issues:

There's some issue in the crypt where characters leaving the crypt will still be visible there. I can still see them in parent.entities. Happened on disconnect and also just now after killing a1.

Dre4mc4tcher — 02/23/2021
Regardless the new dungeon is awesome didn't have so much fun in a while after wiping like 20 or more times the Crypt is cleared :slight_smile: The new monsters are really cool the one I found most dangerous was Orlok his zappers are very powerful. It took me some time to understand how to get around Elenas ability. Some monsters can be kited freeze is nice to have. I did the movement manually im pretty sure othervise i would have died even more.


==

 protected async infoLoop(): Promise<void> {
        // Add info about ourselves
        const party: PartyInfo = getPartyInfo()
        party[character.name] = {
            "lastSeen": new Date(),
            "shouldSwitchServer": this.shouldSwitchServer(),
            "monsterHuntTargets": this.getMonsterHuntTargets(),
            "items": getInventory(),
            "attack": character.attack,
            "frequency": character.frequency,
            "goldm": character.goldm,
            "last_ms": character.last_ms,
            "luckm": character.luckm,
            "map": character.map,
            "x": character.real_x,
            "y": character.real_y,
            "s": character.s
        }
        setPartyInfo(party)


add_bottom_button("movement", "Movement", () => { this.holdPosition = !this.holdPosition });


==
Movement

don't use parent.character, use character. parent.character.x is the characters position within the game window, while character.x is the characters position within the map.


I would use an object to represent the coordinate to walk to. So maybe something like this
coords_to_visit.push({map: char.map, x: char.x, y: char.y});
Then you just pass the object to smart_move
smart_move(coord);


The characters in charlist are smart_movable.
You can smart_move(charlist[0]).

==
localStorage notes
All CODE-set keys will be prepended with "c_store"

Examples: 
Object.keys(localStorage) 
14: "cstore_stats_bestiary"
18: "cstore_give_items_Terazarrior"
==


for (key in {1:"one",2:"two"}) console.log(key)
=>  1, 2

==
let key = "test";
if (!get(key)) { set(key, {})};
show_json(get(key))
==
buy from monster hunter

exchange_buy("monstertoken","tracker")

==
parent.next_skill shows when Cooldowns fade for all skills.

== giveaway

function joinGiveAways(){
  for(let id in parent.entities)
    {
        let entity = parent.entities[id];
        if(entity.id != character.id)
        {
            for(let slot_name in entity.slots)
            {
                let slot = entity.slots[slot_name];
                if(slot && slot.giveaway)
                {
                    if(!slot.list.includes(character.id))
                    {
                        parent.join_giveaway(slot_name,entity.id,slot.rid);
                    }
                }
            }
        }
    }
}
joinGiveAways()


===
function sort_inventory() {
    var moveStuff = {
        'mpot0': 1,
        'goldbooster': 0,
        'luckbooster': 0,
        'xpbooster': 0,
    };
    for (var i = 0; i < 42; i++) {
        var item = character.items[i];
        if (item && Object.keys(moveStuff).includes(item.name)) {
            parent.socket.emit("imove", {
                a: i, 
                b: moveStuff[item.name]
        }
    }
}

==

FPS issues
Tried:
- Disable Nvidia overlay (geforce experience settings)
- Disable Discord game overlay
- Turn off Curseforge/Overworlf ()
- Turn off Windows10 Xbox Game Bar (windows "graphics settings")


===
show_json(get_nearest_monster({'type':'phoenix'}))
// smart_move(get_nearest_monster({'type':'phoenix'}))
===
game_log('run_once')
==
start_character("Terranger","default");
start_character("NoHeals4U","default");

start_character("Terranger","Terranger");
start_character("NoHeals4U","NoHeals4U");
stop_character("Terranger");
stop_character("NoHeals4U");
----
	parent.upgrade(locate_item("helmet"), locate_item("scroll0"), null, true, true).then(e=>show_json(e));


===
set("bank-"+character.name, character.bank)
show_json(get("bank-"+character.name))

====
show_json(distance(character, get_player("CurvyMoney"), false))


===FPS convo
https://discord.com/channels/238332476743745536/247016485812174848/721746281021833326
var start=new Date()
localStorage.setItem("test","1")
for(var i=0;i<100;i++)
{
  //game_log(i);
    //for(var key in localStorage){}
    Object.keys(localStorage).forEach(function(key){
    var foo = get(key);
    });
}
output=mssince(start);
show_json(output)

== REQUEST ITEM MANUALLS 

function request_item_from_all(itemname) {
  for (char of ["Terazarrior","NoHeals4U","Terranger"]) {
    var key = "give_items_"+char;
    var items = get(key);
    if (!items.includes(itemname)) {
      items.push(itemname);
    }
    set(key, items);
  }
}

request_item_from_all("hpamulet");
show_json(get("give_items_Terazarrior"));
====



GET ALL FROM BANK 

show_json(character.bank)

function locate_items(name) {
  idxs = [];
  for(var i=0;i<42;i++) {
    if(character.items[i] 
      && character.items[i].name==name) {
      idxs.push(i);
    }
  }
  return idxs;
}
var items = locate_items("stringer");
for (i of items) { bank_retrieve(i); }










parent.upgrade takes the same parameters as upgrade. But it supports two more. One that I don't remember exactly what did (left it as true) and the last parameter is for calculate

   socket.emit('upgrade', {
          item_num,
          scroll_num,
          offering_num: null,
          clevel,
          calculate: false,
        });


   socket.emit('compound', {
        items,
        scroll_num,
        offering_num: null,
        clevel,
        calculate: true
      });
  let results = push_deferred('compound');

  socket.emit('upgrade', {
        item_num,
        scroll_num,
        offering_num: null,
        clevel,
        calculate: true,
      });
  let results = push_deferred('upgrade');


parent.upgrade(slot_item, slot_scroll, offering, "code", calculate);

returns a promise. you can either use  .then/.catch on it or if you use async/await you can just const result =  await parent.upgrade(

  ==
  ACtion skills

  use_skill('blink', [x, y]);

  ===
  let testing=false;
let angle=0;
let radius=100;

//point to circle arround
let centerX=-0;
let centerY=0;

let lastMove = 0;
setInterval(function(){
        clear_drawings();
        draw_circle(centerX, centerY, radius);
        let nextX = centerX + Math.cos(angle)*radius;
        let nextY = centerY + Math.sin(angle)*radius;
    
        if(distance({x: nextX, y: nextY}, character) < 30)
        {
            angle += 0.1;
        }
        
        draw_line(centerX, centerY, nextX, nextY);
    
        if(!character.moving && new Date() - lastMove > 100)
        {
            xmove(nextX,nextY);
            lastMove = new Date();
        }
}, 10);


==


Kite visualizer
var draw_debug = true;

function on_draw(){
  if(draw_debug){
      clear_drawings();

      draw_circle(character.real_x, character.real_y, character.range);

      var target = get_target(character);
      if(target){
          draw_line(character.real_x, character.real_y, target.x, target.y);
      }
      if(is_moving(character)){
          draw_line(character.from_x, character.from_y, character.going_x, character.going_y, 1, 0x33FF42);
      }
    }

    for(id in parent.entities){
      var entity = parent.entities[id];
      var entity_targ = get_target_of(entity);
      if(entity_targ && entity_targ.name === character.name && entity.moving){
        draw_line(entity.from_x, entity.from_y, entity.going_x, entity.going_y, 1, 0xda0b04);
        draw_circle(entity.x, entity.y, entity.range, 1, 0xda0b04);
      }
    }
}
